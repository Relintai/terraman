<?xml version="1.0" encoding="UTF-8" ?>
<class name="VoxelWorld" inherits="Navigation" version="3.2">
	<brief_description>
	</brief_description>
	<description>
	</description>
	<tutorials>
	</tutorials>
	<methods>
		<method name="_add_prop" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="prop" type="VoxelChunkPropData">
			</argument>
			<description>
			</description>
		</method>
		<method name="_chunk_added" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="chunk" type="VoxelChunk">
			</argument>
			<description>
			</description>
		</method>
		<method name="_create_chunk" qualifiers="virtual">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<argument index="3" name="chunk" type="VoxelChunk">
			</argument>
			<description>
			</description>
		</method>
		<method name="_generate_chunk" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="chunk" type="VoxelChunk">
			</argument>
			<description>
			</description>
		</method>
		<method name="_generation_finished" qualifiers="virtual">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="_get_channel_index_info" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="channel_type" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="_prepare_chunk_for_generation" qualifiers="virtual">
			<return type="void">
			</return>
			<argument index="0" name="chunk" type="VoxelChunk">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_chunk">
			<return type="void">
			</return>
			<argument index="0" name="chunk" type="VoxelChunk">
			</argument>
			<argument index="1" name="x" type="int">
			</argument>
			<argument index="2" name="y" type="int">
			</argument>
			<argument index="3" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_light">
			<return type="void">
			</return>
			<argument index="0" name="light" type="VoxelLight">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_prop">
			<return type="void">
			</return>
			<argument index="0" name="prop" type="VoxelChunkPropData">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_to_generation">
			<return type="void">
			</return>
			<argument index="0" name="chunk" type="VoxelChunk">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_to_generation_queue">
			<return type="void">
			</return>
			<argument index="0" name="chunk" type="VoxelChunk">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_voxel_structure">
			<return type="void">
			</return>
			<argument index="0" name="structure" type="VoxelStructure">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_voxel_structure_at_position">
			<return type="void">
			</return>
			<argument index="0" name="structure" type="VoxelStructure">
			</argument>
			<argument index="1" name="world_position" type="Vector3">
			</argument>
			<description>
			</description>
		</method>
		<method name="add_world_area">
			<return type="void">
			</return>
			<argument index="0" name="area" type="WorldArea">
			</argument>
			<description>
			</description>
		</method>
		<method name="can_chunk_do_build_step">
			<return type="bool">
			</return>
			<description>
			</description>
		</method>
		<method name="clear_chunks">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="clear_lights">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="clear_voxel_structures">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="clear_world_areas">
			<return type="void">
			</return>
			<description>
			</description>
		</method>
		<method name="create_chunk">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_channel_index_info">
			<return type="int">
			</return>
			<argument index="0" name="channel_type" type="int" enum="VoxelWorld.ChannelTypeInfo">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_chunk">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_chunk_at_world_position">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="world_position" type="Vector3">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_chunk_count" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_chunk_index">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_generation_index">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_generation_queue_index">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_generation_queue_size" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_generation_size" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_light">
			<return type="VoxelLight">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_light_count" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_lights">
			<return type="Array">
			</return>
			<description>
			</description>
		</method>
		<method name="get_or_create_chunk">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_or_create_chunk_at_world_position">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="world_position" type="Vector3">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_voxel_at_world_position">
			<return type="int">
			</return>
			<argument index="0" name="world_position" type="Vector3">
			</argument>
			<argument index="1" name="channel_index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_voxel_structure" qualifiers="const">
			<return type="VoxelStructure">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_voxel_structure_count" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="get_world_area" qualifiers="const">
			<return type="WorldArea">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="get_world_area_count" qualifiers="const">
			<return type="int">
			</return>
			<description>
			</description>
		</method>
		<method name="has_chunk" qualifiers="const">
			<return type="bool">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="is_position_walkable">
			<return type="bool">
			</return>
			<argument index="0" name="position" type="Vector3">
			</argument>
			<description>
			</description>
		</method>
		<method name="on_chunk_mesh_generation_finished">
			<return type="void">
			</return>
			<argument index="0" name="chunk" type="VoxelChunk">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_chunk">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="x" type="int">
			</argument>
			<argument index="1" name="y" type="int">
			</argument>
			<argument index="2" name="z" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_chunk_index">
			<return type="VoxelChunk">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_generation_index">
			<return type="void">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_generation_queue_index">
			<return type="void">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_light">
			<return type="void">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_voxel_structure">
			<return type="void">
			</return>
			<argument index="0" name="structure" type="VoxelStructure">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_voxel_structure_index">
			<return type="void">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="remove_world_area">
			<return type="void">
			</return>
			<argument index="0" name="index" type="int">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_lights">
			<return type="void">
			</return>
			<argument index="0" name="chunks" type="Array">
			</argument>
			<description>
			</description>
		</method>
		<method name="set_voxel_at_world_position">
			<return type="void">
			</return>
			<argument index="0" name="world_position" type="Vector3">
			</argument>
			<argument index="1" name="data" type="int">
			</argument>
			<argument index="2" name="channel_index" type="int">
			</argument>
			<description>
			</description>
		</method>
	</methods>
	<members>
		<member name="chunk_size_x" type="int" setter="set_chunk_size_x" getter="get_chunk_size_x" default="16">
		</member>
		<member name="chunk_size_y" type="int" setter="set_chunk_size_y" getter="get_chunk_size_y" default="16">
		</member>
		<member name="chunk_size_z" type="int" setter="set_chunk_size_z" getter="get_chunk_size_z" default="16">
		</member>
		<member name="chunk_spawn_range" type="int" setter="set_chunk_spawn_range" getter="get_chunk_spawn_range" default="4">
		</member>
		<member name="chunks" type="Array" setter="set_chunks" getter="get_chunks" default="[  ]">
		</member>
		<member name="current_seed" type="int" setter="set_current_seed" getter="get_current_seed" default="0">
		</member>
		<member name="data_margin_end" type="int" setter="set_data_margin_end" getter="get_data_margin_end" default="0">
		</member>
		<member name="data_margin_start" type="int" setter="set_data_margin_start" getter="get_data_margin_start" default="0">
		</member>
		<member name="editable" type="bool" setter="set_editable" getter="get_editable" default="false">
		</member>
		<member name="level_generator" type="VoxelmanLevelGenerator" setter="set_level_generator" getter="get_level_generator">
		</member>
		<member name="library" type="VoxelmanLibrary" setter="set_library" getter="get_library">
		</member>
		<member name="max_concurrent_generations" type="int" setter="set_max_concurrent_generations" getter="get_max_concurrent_generations" default="3">
		</member>
		<member name="max_frame_chunk_build_steps" type="int" setter="set_max_frame_chunk_build_steps" getter="get_max_frame_chunk_build_steps" default="0">
		</member>
		<member name="player" type="Spatial" setter="set_player" getter="get_player">
		</member>
		<member name="player_path" type="NodePath" setter="set_player_path" getter="get_player_path" default="NodePath(&quot;&quot;)">
		</member>
		<member name="use_threads" type="bool" setter="set_use_threads" getter="get_use_threads" default="true">
		</member>
		<member name="voxel_scale" type="float" setter="set_voxel_scale" getter="get_voxel_scale" default="1.0">
		</member>
		<member name="voxel_structures" type="Array" setter="set_voxel_structures" getter="get_voxel_structures" default="[  ]">
		</member>
	</members>
	<signals>
		<signal name="chunk_mesh_generation_finished">
			<argument index="0" name="chunk" type="VoxelChunk">
			</argument>
			<description>
			</description>
		</signal>
		<signal name="generation_finished">
			<description>
			</description>
		</signal>
	</signals>
	<constants>
		<constant name="CHANNEL_TYPE_INFO_TYPE" value="0" enum="ChannelTypeInfo">
		</constant>
		<constant name="CHANNEL_TYPE_INFO_ISOLEVEL" value="1" enum="ChannelTypeInfo">
		</constant>
		<constant name="CHANNEL_TYPE_INFO_LIQUID_FLOW" value="2" enum="ChannelTypeInfo">
		</constant>
	</constants>
</class>
